!function(){function e(e){for(var t={},s=0;s<e.children.length;s++){var n=e.children[s];0==n.children.length&&(t[n.tagName]=n.innerHTML)}return t}function t(e){this.port=e.port,this.name=e.name||"meanServer upnp.js",this.searchtime=e.searchtime||2e3,this.ssdp=new n({port:e.port,searchtime:this.searchtime}),this.desiredServices=["urn:schemas-upnp-org:service:WANIPConnection:1","urn:schemas-upnp-org:service:WANPPPConnection:1"],this.validGateway=null,this.interfaces=null,this.mapping=null,this.searching=!1}function s(e){this.info=e,this.description_url=e.headers.location,this.url=new URL(this.description_url),this.services=[],this.devices=[],this.attributes=null,this.externalIP=null}function n(e){this.port=e.port,this.wantUDP=void 0===e.udp||e.udp,this.searchtime=e.searchtime,this.multicast="239.255.255.250",this.ssdpPort=1900,this.boundPort=null,this.searchdevice="urn:schemas-upnp-org:device:InternetGatewayDevice:1",this._onReceive=this.onReceive.bind(this),chrome.sockets.udp.onReceive.addListener(this._onReceive),chrome.sockets.udp.onReceiveError.addListener(this._onReceive),this.sockMap={},this.lastError=null,this.searching=!1,this._event_listeners={}}t.prototype={allDone:function(e){this.callback&&this.callback(e)},getInternalAddress:function(){for(var e=this.validGateway.device.url.hostname.split("."),t=!1,s=e.length-1;s--;s<1)for(var n=e.slice(0,s).join("."),i=0;i<this.interfaces.length;i++){if(24==this.interfaces[i].prefixLength)if(this.interfaces[i].address.split(".").slice(0,s).join(".")==n)return t=this.interfaces[i].address,console.clog("UPNP","selected internal address",t),t}},reset:function(e){this.callback=e,console.clog("UPNP","search start"),this.searching=!0,chrome.system.network.getNetworkInterfaces(function(e){this.interfaces=e,this.devices=[],this.ssdp.addEventListener("device",this.onDevice.bind(this)),this.ssdp.addEventListener("stop",this.onSearchStop.bind(this)),this.ssdp.search()}.bind(this))},onSearchStop:function(e){console.clog("UPNP","search stop"),this.searching=!1,this.getIP(function(e){if(!e)return this.allDone(!1);this.getMappings(function(e){if(!e)return this.allDone(!1);var t=this.getInternalAddress();console.clog("UPNP","got current mappings",e,"internal address",t);for(var s=0;s<e.length;s++)if(e[s].NewInternalClient==t&&e[s].NewInternalPort==this.port&&"TCP"==e[s].NewProtocol)return console.clog("UPNP","already have port mapped"),this.mapping=e[s],void this.allDone(!0);this.addMapping(this.port,"TCP",function(e){console.clog("UPNP","add TCP mapping result",e),this.wantUDP?this.addMapping(this.port,"UDP",(function(e){console.clog("UPNP","add UDP mapping result",e),this.allDone(e)})):this.allDone(e)}.bind(this))}.bind(this))}.bind(this))},onDevice:function(e){console.clog("UPNP","found an internet gateway device",e);var t=new s(e);t.getDescription(function(){this.devices.push(t)}.bind(this))},getWANServiceInfo:function(){for(var e=[],t=0;t<this.devices.length;t++){var s=this.devices[t].getService(this.desiredServices);if(s.length>0)for(var n=0;n<s.length;n++)e.push({service:s[n],device:this.devices[t]})}return e},addMapping:function(e,t,s){this.changeMapping(e,t,1,s)},removeMapping:function(e,t,s){this.changeMapping(e,t,0,s)},changeMapping:function(t,s,n,i){if(this.validGateway){var r=t;if(n)var o=[["NewEnabled",n],["NewExternalPort",r],["NewInternalClient",this.getInternalAddress()],["NewInternalPort",t],["NewLeaseDuration",0],["NewPortMappingDescription",this.name],["NewProtocol",s],["NewRemoteHost",""]];else o=[["NewExternalPort",r],["NewProtocol",s],["NewRemoteHost",""]];this.validGateway.device.runService(this.validGateway.service,n?"AddPortMapping":"DeletePortMapping",o,(function(t){if(200==t.target.code){var s=t.target.responseXML.documentElement.querySelector(n?"AddPortMappingResponse":"DeletePortMappingResponse");i(s?e(s):{error:"unknown",evt:t})}else i({error:t.target.code,evt:t})}))}else i()},getMappings:function(t){if(this.validGateway){var s=this.validGateway,n=0,i=[];function r(s){if(200==s.target.code){var n=e(s.target.responseXML.querySelector("GetGenericPortMappingEntryResponse"));i.push(n),o()}else t(i)}function o(){s.device.runService(s.service,"GetGenericPortMappingEntry",[["NewPortMappingIndex",n++]],r)}o()}else t()},getIP:function(e){var t=this.getWANServiceInfo(),s=null,n=0;function i(i,r){var o=r.target.responseXML.documentElement.querySelector("NewExternalIPAddress"),c=o?o.innerHTML:null;n++,i.device.externalIP=c,c&&(s=c,this.validGateway=i),n==t.length&&e(s)}if(t&&t.length>0)for(var r=0;r<t.length;r++){var o=t[r];o.device.runService(o.service,"GetExternalIPAddress",[],i.bind(this,o))}else e(null)}},s.prototype={runService:function(e,t,s,n){var i=new WSC.ChromeSocketXMLHttpRequest,r=this.url.origin+e.controlURL,o='<?xml version="1.0"?><s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><s:Body><u:'+t+" xmlns:u="+JSON.stringify(e.serviceType)+">"+s.map((function(e){return"<"+e[0]+">"+(void 0===e[1]?"":e[1])+"</"+e[0]+">"})).join("")+"</u:"+t+"></s:Body></s:Envelope>",c=new TextEncoder("utf-8").encode(o).buffer,a={"content-type":'text/xml; charset="utf-8"',connection:"close",SOAPAction:JSON.stringify(e.serviceType)+"#"+t};for(var h in a)i.setRequestHeader(h,a[h]);i.open("POST",r),i.setRequestHeader("connection","close"),i.responseType="xml",i.send(c),i.onload=i.onerror=i.ontimeout=n},getDescription:function(t){var s=new WSC.ChromeSocketXMLHttpRequest;console.clog("UPNP","query",this.description_url),s.open("GET",this.description_url),s.setRequestHeader("connection","close"),s.responseType="xml",s.onload=s.onerror=s.ontimeout=function(s){if(200==s.target.code){for(var n=s.target.responseXML,i=n.documentElement.querySelectorAll("device"),r=0;r<i.length;r++)this.devices.push(e(i[r]));var o=n.documentElement.querySelectorAll("service");for(r=0;r<o.length;r++)this.services.push(e(o[r]))}t()}.bind(this),s.send()},getService:function(e){return this.services.filter((function(t){return-1!=e.indexOf(t.serviceType)}))}},n.prototype={addEventListener:function(e,t){this._event_listeners[e]||(this._event_listeners[e]=[]),this._event_listeners[e].push(t)},trigger:function(e,t){var s=this._event_listeners[e];s&&s.forEach((function(e){e(t)}))},onReceive:function(e){this.sockMap[e.socketId];var t=new TextDecoder("utf-8").decode(e.data);if(t.startsWith("HTTP")||t.startsWith("NOTIFY")){var s=t.split("\r\n"),n={};if(s.forEach((function(e){e.replace(/^([^:]*)\s*:\s*(.*)$/,(function(e,t,s){n[t.toLowerCase()]=s}))})),n.st==this.searchdevice){var i={remoteAddress:e.remoteAddress,remotePort:e.remotePort,socketId:977,headers:n};this.trigger("device",i)}}},error:function(e){this.lastError=e,console.clog("UPNP","error",e),this.searching=!1,this.cleanup(),this.allDone&&this.allDone(!1)},cleanup:function(){for(var e in this.sockMap)chrome.sockets.udp.close(parseInt(e));this.sockMap={},chrome.sockets.udp.onReceive.removeListener(this._onReceive),chrome.sockets.udp.onReceiveError.removeListener(this._onReceive)},stopsearch:function(){console.clog("UPNP","stopping ssdp search"),this.searching=!1,this.cleanup(),this.trigger("stop")},search:function(e){if(!this.searching){setTimeout(this.stopsearch.bind(this),this.searchtime);var t={opts:e};chrome.sockets.udp.create(function(e){t.sockInfo=e,this.sockMap[e.socketId]=t,chrome.sockets.udp.setMulticastTimeToLive(e.socketId,1,function(e){e<0?this.error({error:"ttl",code:e}):chrome.sockets.udp.bind(t.sockInfo.socketId,"0.0.0.0",0,this.onbound.bind(this,t))}.bind(this))}.bind(this))}},onbound:function(e,t){t<0?this.error({error:"bind error",code:t}):chrome.sockets.udp.getInfo(e.sockInfo.socketId,this.onInfo.bind(this,e))},onInfo:function(e,t){var s=chrome.runtime.lastError;s?this.error(s):(this.boundPort=t.localPort,chrome.sockets.udp.joinGroup(e.sockInfo.socketId,this.multicast,this.onjoined.bind(this,e)))},onjoined:function(e,t){var s=chrome.runtime.lastError;if(s)this.error(s);else if(t<0)this.error({error:"join multicast",code:t});else{var n="M-SEARCH * HTTP/1.1\r\nHOST: "+this.multicast+":"+this.ssdpPort+'\r\nMAN: "ssdp:discover"\r\nMX: 1\r\nST: '+this.searchdevice+"\r\n\r\n";chrome.sockets.udp.send(e.sockInfo.socketId,new TextEncoder("utf-8").encode(n).buffer,this.multicast,this.ssdpPort,this.onsend.bind(this))}},onsend:function(e){}},WSC.UPNP=t}();