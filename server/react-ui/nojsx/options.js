const{FormControlLabel:FormControlLabel}=MaterialUI,{FormGroup:FormGroup}=MaterialUI,{Switch:Switch,Checkbox:Checkbox,Tooltip:Tooltip,TextField:TextField}=MaterialUI;export function AppOption({disabled:e,indent:t,name:o,value:l,appOptions:a,onChange:n}){if(!a)return"Loading...";const r=a.meta[o],{type:i,label:p,validation:s}=r,[h,c]=React.useState(!1);function d(e,t){let l=void 0===t?e.target.value:t;if(r.process&&(l=r.process(l)),console.log("onChange",l),s){const e=!s(l);h!=e&&c(e)}n(o,l)}return React.useEffect(()=>{},[]),React.createElement("div",{style:{marginLeft:t?"20px":"0px"}},function(){switch(i){case Number:return React.createElement(TextField,{disabled:e,error:h,helperText:h?r.validationError:"",onChange:d,value:l,label:p,type:"number",InputLabelProps:{shrink:!0},margin:"normal"});case Boolean:return React.createElement(FormGroup,null,React.createElement(Tooltip,{title:r.help||""},React.createElement(FormControlLabel,{label:r.label,control:React.createElement(Checkbox,{disabled:e,checked:!!l,onChange:d})})));case String:return React.createElement(TextField,{disabled:e,onChange:d,label:r.label,margin:"normal",value:l});default:return React.createElement("div",null,"Option with ",o," (",r.type,") - ",a.get(o))}}())}const options={port:{name:"Port",label:"Enter Port",help:"Which port the meanServer will listen on",process:e=>parseInt(e,10),validation:e=>e>=1024&&e<=65535,validationError:"Enter a number between 1024 and 65535",type:Number,default:8887},optAllInterfaces:{label:"Accessible on local network",help:"Make the meanServer available to other computers on the local area network",type:Boolean,default:!1},optDoPortMapping:{label:"Also on internet",help:"Attempt to open up a port on your internet router to make the server also available on the internet",type:Boolean,default:!1},optIPV6:{label:"Listen on IPV6",help:"To have the server listen with IPV6",type:Boolean,default:!1},optCORS:{label:"Set CORS headers",help:"To allow XMLHttpRequests from other origins",type:Boolean,default:!1},optVerbose:{label:"Verbose logging",help:'To see meanServer logs, (navigate to "chrome://inspect", Extensions)',type:Boolean,default:!1},optStatic:{label:"Plain (static) files view",help:"The files directory listing will not use any javascript",type:Boolean,default:!1},optTryOtherPorts:{type:Boolean,default:!1},optRetryInterfaces:{type:Boolean,visible:!1,default:!0},optPreventSleep:{label:"Prevent computer from sleeping",help:"If the server is running, prevent the computer from going into sleep mode",type:Boolean,default:!1},optBackground:{label:"Run in background",help:"Allow the meanServer to continue running, even if you close this window",type:Boolean,default:!1},optAutoStart:{label:"Start on login",help:"Start the meanServer when you login, even if the meanServer window is not opened",depends:[{optBackground:!0}],type:Boolean,default:!1},optRenderIndex:{label:"Automatically show index.html",help:"If the URL is a directory, automatically show an index.html if one is present",type:Boolean,default:!0},optUpload:{label:"Allow File upload",help:"The files directory listing allows drag-and-drop to upload small files",type:Boolean,default:!1},optModRewriteEnable:{label:"Enable mod-rewrite (for SPA)",help:"For SPA (single page apps) that support HTML5 history location",type:Boolean,default:!1},optModRewriteRegexp:{label:"Regular Expression",help:"Any URL matching this regular expression will be rewritten",type:String,default:".*\\.[\\d\\w]+$"},optModRewriteNegate:{label:"Negate Regexp",help:"Negate the matching logic in the regexp",type:Boolean,default:!0},optModRewriteTo:{label:"Rewrite To",help:"Which file to server instead of the actual path. For example, /index.html",type:String,default:"/index.html"}};export class AppOptions{constructor(e){this.meta=options,this.options=null,chrome.storage.local.get(null,function(t){this.options=t,e()}.bind(this))}get(e){return void 0!==this.options[e]?this.options[e]:this.meta[e].default}getAll(){var e={};for(var t in Object.assign(e,this.options),this.meta)void 0===e[t]&&void 0!==this.meta[t].default&&(e[t]=this.meta[t].default);return e}set(e,t){this.options[e]=t;var o={};o[e]=t,chrome.storage.local.set(o,(function(){}))}}